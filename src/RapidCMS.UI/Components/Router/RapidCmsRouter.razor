<CascadingValue Value="@CustomLoginStatus" Name="CustomLoginStatus">
    <CascadingAuthenticationState>
        <Router AppAssembly="typeof(RapidCmsRouter).Assembly" AdditionalAssemblies="AdditionalAssemblies" PreferExactMatches="true">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
                    <NotAuthorized>
                        @if (!(context.User.Identity?.IsAuthenticated ?? false))
                        {

                            <LayoutView Layout="typeof(EmptyLayout)">
                                <LoginPage CustomElement="CustomLoginScreen!" />
                            </LayoutView>
                        }
                        else
                        {
                            <UnauthorizedPage />
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            </Found>
            <NotFound>
                <LayoutView Layout="typeof(EmptyLayout)">
                    <div class="content">
                        <p><strong>Page not found</strong></p>
                        <p>Sorry, but there's nothing here!</p>
                    </div>
                </LayoutView>
            </NotFound>
        </Router>
        @*<Router AppAssembly="typeof(RapidCmsRouter).Assembly" AdditionalAssemblies="AdditionalAssemblies" PreferExactMatches="true">
                <Found Context="routeData">
                    <AuthorizeView>
                        <Authorized>
                            <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)" />
                        </Authorized>
                        <NotAuthorized>
                            <LayoutView Layout="typeof(EmptyLayout)">
                                <LoginPage CustomElement="CustomLoginScreen!" />
                            </LayoutView>
                        </NotAuthorized>
                        <Authorizing>
                            <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)" />
                        </Authorizing>
                    </AuthorizeView>
                </Found>
                <NotFound>
                    <AuthorizeView>
                        <Authorized>
                            <LayoutView Layout="typeof(MainLayout)">
                                <div class="content">
                                    <p><strong>Page not found</strong></p>
                                    <p>Sorry, but there's nothing here!</p>
                                </div>
                            </LayoutView>
                        </Authorized>
                        <NotAuthorized>
                            <LayoutView Layout="typeof(EmptyLayout)">
                                <LoginPage CustomElement="CustomLoginScreen!" />
                            </LayoutView>
                        </NotAuthorized>
                    </AuthorizeView>
                </NotFound>
            </Router>*@
    </CascadingAuthenticationState>
</CascadingValue>

@code {
    private RenderFragment? CustomLoginScreen { get; set; }
    private RenderFragment? CustomLoginStatus { get; set; }

    [Inject]
    private ILogin LoginRegistration { get; set; } = default!;

    [Parameter]
    public IEnumerable<Assembly>? AdditionalAssemblies { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        CustomLoginScreen = LoginRegistration.CustomLoginScreenRegistration.ToRenderFragment();
        CustomLoginStatus = LoginRegistration.CustomLoginStatusRegistration.ToRenderFragment();

        await base.OnParametersSetAsync();
    }
}
