@inject IMediator Mediator
@inject ICms Cms

<div class="content">
    <p><strong>Error</strong></p>
    <p>An errror occured when your request was made.</p>
    <p><a href="javascript:window.location.href = '/'" class="btn btn-primary">Return to home and start again.</a></p>
</div>

@{
    if (Cms.IsDevelopment)
    {
        var exEvent = Mediator.GetLatestEventArgs<ExceptionEventArgs>();

        if (exEvent?.Exception != null)
        {
            <div class="content">
                <p><code>@exEvent.Exception.Message</code></p>

                <pre>@exEvent.Exception.StackTrace</pre>

                @{
                    var innerException = exEvent.Exception.InnerException;

                    while (innerException != null)
                    {
                        <p><code>@innerException.Message</code></p>

                        innerException = innerException.InnerException;
                    }
                }
            </div>
        }
        else
        {
            <div class="content">
                <p>No additional exception details are available.</p>
            </div>
        }
    }
    else
    {
        <div class="content">
            <p>To enable exception view, set <code>isDevelopment</code>:</p>
            <pre>app.UseRapidCMS(isDevelopment: env.IsDevelopment());</pre>
        </div>
    }
}