@inherits BaseRootSection

@if (!StateIsChanging)
{
    @if (CurrentNavigationState.PageType == PageType.Node)
    {
        <div class="content" @key=Update>
            @if (Sections == null || !Sections.Any())
            {
                <p>Loading..</p>
            }
            else
            {
                @foreach (var mainSection in Sections)
                {
                    var index = 0;

                    <CascadingEditContext EditContext=@mainSection.editContext>
                        <ButtonBar Buttons="Buttons" OnButtonClick="ButtonOnClickAsync" EditContext=@mainSection.editContext />

                        <EditContextStrayErrors />

                        @foreach (var section in mainSection.sections)
                        {
                            var renderFragment = section.ToRenderFragment();

                            if (renderFragment != null)
                            {
                                @renderFragment
                            }
                            else
                            {
                                <BlockSection Section="section" OnButtonClick="ButtonOnClickAsync" BlockNr="index++" />
                            }
                        }
                    </CascadingEditContext>
                }
            }
        </div>
    }
    else if (CurrentNavigationState.PageType == PageType.Collection)
    {
        @if (ListContext == null || ListUI == null || Sections == null)
        {
            <div class="content">
                <p>Loading..</p>
            </div>
        }
        else if (ListUI.ListType == ListType.Table)
        {
            <div class="content" @key=Update>
                <CascadingEditContext EditContext=@ListContext.ProtoEditContext>
                    <Tabbar Tabs="Tabs"
                            SearchBarVisible="ListUI.SearchBarVisible"
                            State="CurrentNavigationState.CollectionState"
                            OnSearch="Search"
                            OnTabChange="TabChange" />
                    <ButtonBar Buttons="Buttons" OnButtonClick="ListButtonOnClickAsync" EditContext=@ListContext.ProtoEditContext />
                </CascadingEditContext>
                <TableSection UI="ListUI"
                              Sections="Sections"
                              CurrentPage="CurrentNavigationState.CollectionState.CurrentPage" 
                              MaxPage="CurrentNavigationState.CollectionState.MaxPage" 
                              OnButtonClick="NodeButtonOnClickAsync"
                              OnRowDragged="OnRowDragged"
                              OnPageChanged="PageChanged" />
            </div>
        }
        else if (ListUI.ListType == ListType.Block)
        {
            if (Buttons?.Any() == true)
            {
                <div class="content buttons-only">
                    <CascadingEditContext EditContext=@ListContext.ProtoEditContext>
                        <Tabbar Tabs="Tabs"
                                SearchBarVisible="ListUI.SearchBarVisible"
                                State="CurrentNavigationState.CollectionState"
                                OnSearch="Search"
                                OnTabChange="TabChange" />
                        <ButtonBar Buttons="Buttons" OnButtonClick="ListButtonOnClickAsync" EditContext=@ListContext.ProtoEditContext />
                    </CascadingEditContext>
                </div>
            }
            <BlocksSection Sections="Sections"
                           CurrentPage="CurrentNavigationState.CollectionState.CurrentPage" 
                           MaxPage="CurrentNavigationState.CollectionState.MaxPage" 
                           OnButtonClick="NodeButtonOnClickAsync"
                           OnPageChanged="PageChanged" />
        }
    }
    else if ((CurrentNavigationState.PageType == PageType.Page || CurrentNavigationState.PageType == PageType.Dashboard) && PageContents != null)
    {
        <CascadingValue Name="Embedded" Value="true">
            @foreach (var section in PageContents)
            {
                @RenderType(section);
            }
        </CascadingValue>
    }
    else if (CurrentNavigationState.PageType == PageType.Unauthorized)
    {
        <UnauthorizedSection />
    }
    else if (CurrentNavigationState.PageType == PageType.Error)
    {
        <ErrorSection />
    }
}